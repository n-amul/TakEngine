# ------------------------------------------------------------
#   TakEngine ‑ Engine library
# ------------------------------------------------------------

file(GLOB_RECURSE ENGINE_SRC CONFIGURE_DEPENDS 
src/*.cpp
src/*.hpp
)

add_library(engine SHARED ${ENGINE_SRC})
target_compile_features(engine PUBLIC cxx_std_17)

# Export headers for consumers (build tree + install tree)
target_include_directories(engine
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
        $<INSTALL_INTERFACE:include>
)

target_compile_definitions(engine PRIVATE TEXPORT)
if(MSVC)
    target_compile_options(engine PRIVATE /wd4996)  
    target_compile_options(engine PRIVATE "/MP")
endif()

# ------------------------------------------------------------
#   Third‑party dependencies
# ------------------------------------------------------------

find_package(Vulkan REQUIRED)      # system Vulkan SDK

include(FetchContent)

# ---- GLM ----
FetchContent_Declare(
    glm
    GIT_REPOSITORY https://github.com/g-truc/glm.git
    GIT_TAG        0.9.9.8
)
FetchContent_MakeAvailable(glm)

# ---- GLFW (static) ----
set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
FetchContent_Declare(
    glfw
    GIT_REPOSITORY https://github.com/glfw/glfw.git
    GIT_TAG        3.4
)
FetchContent_MakeAvailable(glfw)

# ---- spdlog (header-only by default) ----
FetchContent_Declare(
    spdlog
    GIT_REPOSITORY https://github.com/gabime/spdlog.git
    GIT_TAG        v1.12.0
)
FetchContent_MakeAvailable(spdlog)

#----stb_image------------
file(DOWNLOAD 
    https://raw.githubusercontent.com/nothings/stb/f75e8d1cad7d90d72ef7a4661f1b994ef78b4e31/stb_image.h
    ${CMAKE_CURRENT_BINARY_DIR}/external/stb/stb_image.h
    STATUS download_status
)
list(GET download_status 0 status_code)
if(NOT status_code EQUAL 0)
    message(FATAL_ERROR "Failed to download stb_image.h")
endif()

# Create interface library for stb_image
add_library(stb_image INTERFACE)
target_include_directories(stb_image INTERFACE ${CMAKE_CURRENT_BINARY_DIR}/external/stb)

# ---- Link everything into engine.dll ----
target_link_libraries(engine
    PUBLIC
        Vulkan::Vulkan   # include & link flags
        glm::glm         # header‑only
        glfw             # static .lib
        spdlog::spdlog   # header‑only
        stb_image       
)


# -------------defines--------------
target_compile_definitions(engine PRIVATE
    SHADER_DIR="${CMAKE_SOURCE_DIR}/shaders"
)